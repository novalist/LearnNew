<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd 
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop.xsd">

<bean id="dataSourceMaster" class="org.apache.commons.dbcp.BasicDataSource">
  <property name="driverClassName">
    <value>com.mysql.jdbc.Driver</value>
  </property>
  
  <property name="username">
    <value>dev</value>
  </property>
  <property name="password">
    <value>wJSdQVNvS6PqN8wG</value>
  </property>
  <property name="url">
    <value>jdbc:mysql://127.0.0.1:33306/wms?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull</value>
  </property>

  <property name="initialSize">
  	<value>10</value>
  </property>
  <property name="minIdle">
  	<value>1</value>
  </property>
  <property name="maxIdle">
  	<value>25</value>
  </property>
  
  <!-- 超时等待时间 -->
  <property name="maxWait">
  	<value>60000</value>
  </property> 
  <!-- 每隔一个小时检查一次连接    单位为MS-->
  <property name="minEvictableIdleTimeMillis">
  	<value>360000</value>
  </property>
  <!-- 长时间不用连接，将连接回收 -->
  <property name="removeAbandoned">
  	<value>true</value>
  </property>
  <!-- 如果连接180S没有使用，则认为连接可以被回收 -->
  <property name="removeAbandonedTimeout">
 	<value>180</value> 
  </property>
  <!-- SQL查询,用来验证从连接池取出的连接 -->
  <property name="validationQuery">
	<value>SELECT 1</value>
  </property>
  <!-- 取出连接前进行检验 --> 
  <property name="testOnBorrow">
  	<value>false</value>
  </property>
</bean>

<bean id="sqlSessionFactoryMaster" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSourceMaster" />
	<property name="configLocation" value="classpath:SQLMapConfig.xml" />
	<property name="mapperLocations" value="classpath:com/zh/mybatisXml/*.xml" /> 
</bean>

<!-- Spring自动扫描基础包下面的dao  -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
    <property name="basePackage" value="com.zh.dao" />
     <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryMaster"/>  
</bean>


<bean id="sqlSessionMaster" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
     <constructor-arg index="0" ref="sqlSessionFactoryMaster"/>
 </bean>
<tx:advice id="txAdviceMaster" transaction-manager="transactionManagerMaster">
    <tx:attributes>
        <!-- <tx:method name="select*" read-only="true"/>
        <tx:method name="find*" read-only="true"/>
        <tx:method name="get*" read-only="true"/> -->
        <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />

    </tx:attributes>
</tx:advice>

<bean id="transactionManagerMaster" 
  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSourceMaster"/>
</bean>

<tx:annotation-driven transaction-manager="transactionManagerMaster" proxy-target-class="true" />
<aop:config>
	<aop:pointcut id="allMethod" expression="execution(* com.zh.service.impl.*.*(..)) " />
	<aop:advisor advice-ref="txAdviceMaster" pointcut-ref="allMethod" />
</aop:config>
</beans>
